{"version":3,"file":"component---src-pages-projects-js-b466715302634263f4e7.js","mappings":"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","sources":["webpack://anthony-s-website/./src/components/projectList/desktopProjectListView.styled.js","webpack://anthony-s-website/./src/components/projectList/desktopProjectListView.js","webpack://anthony-s-website/./src/components/projectList/mobileProjectListView.styled.js","webpack://anthony-s-website/./src/components/projectList/mobileProjectListView.js","webpack://anthony-s-website/./src/components/projectList/projectList.js","webpack://anthony-s-website/./src/pages/projects.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { Box, Typography, Grid } from \"@mui/material\";\r\n\r\nexport const ContentBox = styled(Box)`\r\n    max-width: 95vw;\r\n    width: 2000px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const ContentTitle = styled(Typography)`\r\n    text-align: left;\r\n    font-weight: 500;\r\n    font-size: 28px;\r\n    padding-bottom: 30px;\r\n`;\r\n\r\nexport const ContentGrid = styled(Grid)`\r\n    direction: column;\r\n`;\r\n\r\nexport const ContentGridItem = styled(Grid)`\r\n    padding-top: 10px;\r\n    padding-bottom: 60px;\r\n`;\r\n\r\nexport const ProjectGrid = styled(Grid)`\r\n    direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const ProjectInfoBox = styled(Box)`\r\n    max-width: 60vw;\r\n    max-height: 30vh;\r\n    min-height: 300px;\r\n    width: 1400px;\r\n    height: 400px;\r\n    padding-right: 20px;\r\n`;\r\n\r\nexport const ProjectTitle = styled(Typography)`\r\n    text-align: left;\r\n    font-weight: 550;\r\n    font-size: 32px;\r\n    padding-left: 10px;\r\n`;\r\n\r\nexport const ProjectTypeGrid = styled(Grid)`\r\n    direction: row;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    padding-left: 10px;\r\n`\r\n\r\nexport const ProjectTypeGridItem = styled(Grid)`\r\n    padding-right: 8px;\r\n`;\r\n\r\nexport const ProjectTypeBox = styled(Box)`\r\n    width: fit-content;\r\n    margin: 1px;\r\n    border-radius: 2px;\r\n`\r\n\r\nexport const ProjectTypeTypography = styled(Typography)`\r\n    color: #fff;\r\n    padding: 5px;\r\n    font-size: 13px;\r\n    font-weight:650;\r\n`\r\n\r\nexport const ProjectButtonGrid = styled(Grid)`\r\n    direction: row;\r\n`;\r\n\r\nexport const ProjectButtonGridItem = styled(Grid)`\r\n    padding-right: 8px;\r\n`;\r\n\r\nexport const ProjectButtonBox = styled(Box)`\r\n    display: flex;\r\n    min-width: 200px;\r\n    min-height: 50px;\r\n    width: fit-content;\r\n    height: fit-content;\r\n    margin: 1px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 8px !important;\r\n    box-shadow: 2px 2px !important;\r\n`\r\n\r\nexport const ProjectButtonTypography = styled(Typography)`\r\n    text-align: center;\r\n    color: #fff;\r\n    font-size: 15px;\r\n    font-weight: 650;\r\n`;\r\n\r\nexport const ProjectDescriptionBox = styled(Box)`\r\n    padding-top: 5px;\r\n    padding-bottom: 8px;\r\n    padding-left: 10px;\r\n`;\r\n\r\nexport const ProjectDescriptionTypography = styled(Typography)`\r\n    font-size: 15px;\r\n    max-width: 800px;\r\n`\r\n\r\nexport const ProjectImageBoxOuter = styled(Box)`\r\n    display: flex;\r\n    max-height: 30vh;\r\n    max-width: 30vw;\r\n    min-height: 300px;\r\n    width: 400px;\r\n    height: 400px;\r\n    justify-content: center; \r\n`;\r\n\r\nexport const ProjectImage = styled.img`\r\n    position: relative;\r\n    width: fit-content;\r\n    height: fit-content;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    float: right;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    object-fit: scale-down;\r\n`;","import React from \"react\"\r\nimport { Grid, Paper, IconButton } from '@mui/material';\r\n\r\nimport { ContentBox, ContentTitle, ContentGrid, ContentGridItem,ProjectGrid, ProjectInfoBox, ProjectTitle,\r\n    ProjectTypeGrid, ProjectTypeGridItem, ProjectTypeBox, ProjectTypeTypography,\r\n    ProjectButtonGrid, ProjectButtonBox, ProjectButtonGridItem, ProjectButtonTypography,\r\n    ProjectDescriptionBox, ProjectDescriptionTypography,\r\n    ProjectImageBoxOuter, ProjectImage } from './desktopProjectListView.styled'\r\n\r\nexport default function DesktopProjectListView(props) {\r\n    return(\r\n        <ContentBox>\r\n            <ContentTitle>Projects</ContentTitle>\r\n            <ContentGrid container>{\r\n                props.data.allProjectJson.edges.map(({node}) => {\r\n                    return(\r\n                        <ContentGridItem item key={node.title + \"desktop\"}>\r\n                            \r\n                                <ProjectGrid container>\r\n                                    <Grid item>\r\n                                    <Paper>\r\n                                        <ProjectInfoBox>\r\n                                            {/* Project Title */}\r\n                                            <ProjectTitle>{node.title}</ProjectTitle>\r\n\r\n                                            {/* Project Type */}\r\n                                            <ProjectTypeGrid container>{\r\n                                                node.project_type ?\r\n                                                node.project_type.map((type) => {\r\n                                                    return(\r\n                                                        <ProjectTypeGridItem item>\r\n                                                            <ProjectTypeBox bgcolor=\"primary.main\">\r\n                                                                <ProjectTypeTypography >{type.name}</ProjectTypeTypography>\r\n                                                            </ProjectTypeBox>\r\n                                                        </ProjectTypeGridItem>\r\n                                                    )\r\n                                                })\r\n                                                :\r\n                                                null\r\n                                            }</ProjectTypeGrid>\r\n\r\n                                            {/* Project Tags */}\r\n                                            <ProjectTypeGrid container>{\r\n                                                node.tags ?\r\n                                                node.tags.map((tag) => {\r\n                                                    return(\r\n                                                        <ProjectTypeGridItem item>\r\n                                                            <ProjectTypeBox bgcolor=\"secondary.main\">\r\n                                                                <ProjectTypeTypography>{tag.name}</ProjectTypeTypography>\r\n                                                            </ProjectTypeBox>\r\n                                                        </ProjectTypeGridItem>\r\n                                                    )\r\n                                                })\r\n                                                :\r\n                                                null\r\n                                            }</ProjectTypeGrid>\r\n\r\n                                            {/* View Project Buttons */}\r\n                                            <ProjectButtonGrid container>\r\n                                                <ProjectButtonGridItem item>\r\n                                                    <IconButton href={`/project/${node.slug}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        <ProjectButtonBox bgcolor=\"warning.main\">\r\n                                                            <ProjectButtonTypography>\r\n                                                                More Information\r\n                                                            </ProjectButtonTypography>\r\n                                                        </ProjectButtonBox>\r\n                                                    </IconButton>\r\n                                                </ProjectButtonGridItem>\r\n                                                \r\n                                                {\r\n                                                    /* Github link if there's one*/\r\n                                                    node.source ?\r\n                                                    <ProjectButtonGridItem item>\r\n                                                        <IconButton href={node.source} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                            <ProjectButtonBox bgcolor=\"warning.main\">\r\n                                                                <ProjectButtonTypography>\r\n                                                                    Github\r\n                                                                </ProjectButtonTypography>\r\n                                                            </ProjectButtonBox>\r\n                                                        </IconButton>\r\n                                                    </ProjectButtonGridItem>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </ProjectButtonGrid>\r\n\r\n                                            {/* Project Description */}\r\n                                            <ProjectDescriptionBox>\r\n                                                <ProjectDescriptionTypography noWrap>\r\n                                                    {node.description}\r\n                                                </ProjectDescriptionTypography>\r\n                                            </ProjectDescriptionBox>\r\n                                        </ProjectInfoBox>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    {/* Project Image */}\r\n                                    <Grid item>\r\n                                        <Paper>\r\n                                        <ProjectImageBoxOuter>\r\n                                        {\r\n                                            node.images ? <ProjectImageBoxOuter><ProjectImage src={node.images[0].image.publicURL}/></ProjectImageBoxOuter> : <div/>\r\n                                        }\r\n                                        </ProjectImageBoxOuter>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </ProjectGrid>\r\n                        </ContentGridItem>\r\n                    )\r\n                })\r\n            }</ContentGrid>\r\n        </ContentBox>\r\n    );\r\n}","import styled from \"styled-components\";\r\nimport { Typography, IconButton, Grid, Paper } from \"@mui/material\";\r\n\r\nexport const ContentTitle = styled(Typography)`\r\n    text-align: center;\r\n    font-weight: 500;\r\n    font-size: 28px;\r\n    padding-bottom: 30px;\r\n`;\r\n\r\nexport const ContentGrid = styled(Grid)`\r\n    direction: row;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ProjectButton = styled(IconButton)`\r\n    height: 45vw;\r\n    width: 45vw;\r\n    margin: 2vw;\r\n`;\r\n\r\nexport const ProjectTypography = styled(Typography)`\r\n    text-align: center;\r\n    margin-left: 3px;\r\n    margin-right: 3px;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    color: black;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const ProjectPaperWithoutImage = styled(Paper)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 45vw;\r\n    width: 45vw;\r\n    background-color: white;\r\n`","import React from \"react\"\r\n\r\nimport { Box, Paper } from '@mui/material';\r\n\r\nimport { ContentTitle, ContentGrid, ProjectButton, ProjectTypography, ProjectPaperWithoutImage } from \"./mobileProjectListView.styled\";\r\n\r\nexport default function MobileProjectListView(props) {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <ContentTitle>Projects</ContentTitle>\r\n            <ContentGrid container>{\r\n                props.data.allProjectJson.edges.map(({node}) => (\r\n                    <Box key={node.title + \"mobile\"}>{\r\n                        node.images ?\r\n                        <ProjectButton href={`/project/${node.slug}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Paper style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", backgroundImage:`linear-gradient(rgba(255,255,255,.4), rgba(255,255,255,.8)), url(${node.images[0].image.publicURL})`, backgroundSize: \"cover\", height: \"45vw\", width:\"45vw\"}}>\r\n                                <ProjectTypography>\r\n                                    {node.title}\r\n                                </ProjectTypography>\r\n                            </Paper>\r\n                        </ProjectButton>\r\n                        :\r\n                        <ProjectButton href={`/project/${node.slug}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <ProjectPaperWithoutImage>\r\n                                <ProjectTypography>\r\n                                    {node.title}\r\n                                </ProjectTypography>\r\n                            </ProjectPaperWithoutImage>\r\n                        </ProjectButton>\r\n                    }</Box>\r\n                ))\r\n            }</ContentGrid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\"\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nimport DesktopProjectListView from \"./desktopProjectListView\";\r\nimport MobileProjectListView from \"./mobileProjectListView\";\r\n\r\nexport default function ProjectList(props) {\r\n\r\n    const query = graphql`\r\n        query GetAllProjectItems {\r\n            allProjectJson {\r\n                edges {\r\n                    node {\r\n                        title\r\n                        project_type {\r\n                            name\r\n                        }\r\n                        item_category\r\n                        tags {\r\n                            name\r\n                        }\r\n                        slug\r\n                        source\r\n                        images {\r\n                            image {\r\n                                publicURL\r\n                            }\r\n                        }\r\n                        videos {\r\n                            video_url\r\n                            title\r\n                        }\r\n                        format_type\r\n                        status\r\n                        description\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `\r\n    const data = useStaticQuery(query);\r\n\r\n    return(\r\n        <div style={{paddingTop:\"40px\"}}>{\r\n            /* Window View of the project list */\r\n            !props.isMobile ? <DesktopProjectListView data={data}/> : <MobileProjectListView data={data}/>\r\n        }</div>\r\n    );\r\n}","import * as React from \"react\"\r\nimport Layout from '../components/layout'\r\nimport ProjectList from '../components/projectList/projectList';\r\n\r\n// markup\r\nexport default function ProjectsPage () {\r\n    return (\r\n        <Layout>\r\n            <ProjectList/>\r\n        </Layout>\r\n    );\r\n};"],"names":["ContentBox","styled","Box","withConfig","ContentTitle","Typography","ContentGrid","Grid","ContentGridItem","ProjectGrid","ProjectInfoBox","ProjectTitle","ProjectTypeGrid","ProjectTypeGridItem","ProjectTypeBox","ProjectTypeTypography","ProjectButtonGrid","ProjectButtonGridItem","ProjectButtonBox","ProjectButtonTypography","ProjectDescriptionBox","ProjectDescriptionTypography","ProjectImageBoxOuter","ProjectImage","DesktopProjectListView","props","React","container","data","allProjectJson","edges","map","node","item","key","title","Paper","project_type","type","bgcolor","name","tags","tag","IconButton","href","slug","target","rel","source","noWrap","description","images","src","image","publicURL","ProjectButton","ProjectTypography","ProjectPaperWithoutImage","MobileProjectListView","style","display","justifyContent","alignItems","backgroundImage","backgroundSize","height","width","ProjectList","useStaticQuery","paddingTop","isMobile","ProjectsPage","Layout"],"sourceRoot":""}